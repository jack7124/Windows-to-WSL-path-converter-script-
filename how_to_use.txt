# This is an explanation file for using my convert_w_path script.

# *GO TO BOTTOM IF YOU WANT THIS COMMAND AUTOMATED, OTHERWISE THE COMMAND USES MANUAL VALIDATION OF PATH**

# First off, do not run the script first. You need to change some 
# file permissions and update the location of the command. 


# 1. Make the script executable 
## 	1. To do this, you will use chmod +x. Chmod changes file permissions and +x adds the executable permission.
##      2. chmod +x convert_W_path.sh 



# 2. Add to system PATH to allow global use 
## 	1. Move your script to the bin directory
##	  A. If you don't have a bin directory, make one in your home directory
##          * cd ~
##	    * mkdir -p ~/bin
## 	  B. mv convert_W_path.sh ~/bin



# 3. Add ~/bin to the PATH environment variable, bashrc
##	1. echo 'export PATH="$HOME/bin:$PATH"' >> ~/.bashrc


# 4. Reload bashrc to apply changes to current terminal session
##	1. source ~/.bashrc

# Now you can run convert_w_path.sh in any directory.
# The final output after running the script should be an echo of the /mnt path which WSL finds friendly. 

# USE QUOTES AROUND THE FILE PATH! 
# ex: convert_w_path.sh "C:\Users\user\OneDrive\Documents\cool_repo"
# output: /mnt/c/Users/user/OneDrive/Documents/cool_repo
# usage: cd /mnt/c/Users/user/OneDrive/Documents/cool_repo

# OPTIONAL: Automate usage so that the converted path is auto changed into once path is provided, one command
# Manual validation is still usable using the example command block above

#^^^^^^^^^^^^^
## Creating a cd function in bash.rc
## 1. open bash.rc using nano 
###	A. nano ~/.bashrc

## 2. Add the following function to the bottom of the file BELOW the export path line we added earlier

# wcd is the name of our shell function we're creating
wcd() {
  # This tests if the length is zero using -z. That tests our first arg, the Windows path
  if [ -z "$1" ]; then
    echo "Error: Please provide a Windows path in quotes."
  else
    # Run your script and capture its output
    # Local declares wsl_path as only accessible in this function
    # $(...) This runs the interior () command and uses it as output for the wsl_path variable
    local wsl_path=$(convert_W_path.sh "$1")
    # Change directory to the converted path
    cd "$wsl_path"
  fi
}

## usage: wcd "C:\Users\user\OneDrive\Documents\cool_repo"
## Result: you are put into the directory.
### Why use this: The manual validation requires three distinct actions:
	# 1. Use the .sh command to echo the /mnt path
	# 2. copy the echo'd path
	# 3. cd into the echo'd path directory
### This automated command is all in one. You simply copy and paste the path, then you are automatically routed into that directory's path

# This does NOT make new directories, it only combines the manual validation functions to route into the same /mnt path.
# Reminder that manual validation is still able to be used even if you create this wcd command!

# Enjoy some workflow efficiency :)
